name: Update Data
run-name: Updating data set
on:
  workflow_dispatch:
  schedule:
    - cron: '37 08 * * *' # Every day at 08:37 UTC, a couple hours after the new daily drops
jobs:
  UpdateData:
    runs-on: ubuntu-latest
    steps:
      - name: Clone into main repo
        uses: actions/checkout@v4
        with:
          repository: sybilwolf/eth-daily-archiver
          path: eth-daily-archiver
          ref: main
          token: ${{ secrets.ETH_ARCHIVER_TOKEN }}
      - name: Clone into data repo
        uses: actions/checkout@v4
        with:
          repository: sybilwolf/eth-daily-archiver-data
          path: eth-daily-archiver-data
          ref: main
          token: ${{ secrets.ETH_ARCHIVER_TOKEN }}
      - name: Clone into URS repo
        uses: actions/checkout@v4
        with:
          repository: sybilwolf/URS
          path: URS
          ref: master
          token: ${{ secrets.ETH_ARCHIVER_TOKEN }}
      - name: Print working directory tree
        run: |
          echo "Working directory tree:"
          # https://stackoverflow.com/a/3455651
          ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Set up Poetry
        uses: snok/install-poetry@v1.4.1
      - name: Set up PRAW credential environment variables for URS
        run: |
          echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> URS/.env
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> URS/.env
          echo "USER_AGENT=${{ secrets.USER_AGENT }}" >> URS/.env
          echo "REDDIT_USERNAME=${{ secrets.REDDIT_USERNAME }}" >> URS/.env
          echo "REDDIT_PASSWORD=${{ secrets.REDDIT_PASSWORD }}" >> URS/.env
      - name: URS poetry install
        working-directory: URS
        run: |
          poetry install
      - name: Maturin build
        uses: PyO3/maturin-action@v1
        with:
          command: develop
          args: --release
          working-directory: URS
      - name: Run main.py
        working-directory: eth-daily-archiver
        timeout-minutes: 5 # If this is interrupted, it should catch up in subsequent runs
        run: |
          python ./main.py
      - name: Commit and push changes to data repo
        working-directory: eth-daily-archiver-data
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --cached --quiet || git commit -m "Update data from workflow"
          git push
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: archive
          path: eth-daily-archiver-data
          retention-days: 7
